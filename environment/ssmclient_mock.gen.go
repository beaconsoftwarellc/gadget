// Code generated by MockGen. DO NOT EDIT.
// Source: ssm.go
//
// Generated by this command:
//
//	mockgen -source=ssm.go -package environment -destination ssmclient_mock.gen.go
//
// Package environment is a generated GoMock package.
package environment

import (
	reflect "reflect"

	ssm "github.com/aws/aws-sdk-go/service/ssm"
	gomock "go.uber.org/mock/gomock"
)

// MockssmClient is a mock of ssmClient interface.
type MockssmClient struct {
	ctrl     *gomock.Controller
	recorder *MockssmClientMockRecorder
}

// MockssmClientMockRecorder is the mock recorder for MockssmClient.
type MockssmClientMockRecorder struct {
	mock *MockssmClient
}

// NewMockssmClient creates a new mock instance.
func NewMockssmClient(ctrl *gomock.Controller) *MockssmClient {
	mock := &MockssmClient{ctrl: ctrl}
	mock.recorder = &MockssmClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockssmClient) EXPECT() *MockssmClientMockRecorder {
	return m.recorder
}

// GetParametersByPath mocks base method.
func (m *MockssmClient) GetParametersByPath(arg0 *ssm.GetParametersByPathInput) (*ssm.GetParametersByPathOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetParametersByPath", arg0)
	ret0, _ := ret[0].(*ssm.GetParametersByPathOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetParametersByPath indicates an expected call of GetParametersByPath.
func (mr *MockssmClientMockRecorder) GetParametersByPath(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetParametersByPath", reflect.TypeOf((*MockssmClient)(nil).GetParametersByPath), arg0)
}
